package sherlock.biz.cep;

// list any import classes here.
import sherlock.biz.vo.SherlockEvent;
import sherlock.biz.vo.SherlockEventCorrelation;

declare SherlockEvent
	@role(event)
	@expires(70s)
	@timestamp (eventDestinationTimestamp)
end

declare SherlockEventCorrelation
	@role(event)
	@expires(70s)
	@timestamp (eventDestinationTimestamp)
end

global Long startTime;
global Long startMemory;
global Long totalFactCount;
global java.util.HashMap threatMap; 

// use case 01
// detect if there are more than five repeated login attempts on the same ip address (and port) 
// in any of the product software (once access is gained through transport layer or below)
rule "Repeated Login Attempt Initial"
dialect "mvel"
no-loop
  when
    e1: SherlockEvent(eventType == "failed login attempt") over window:time(30s) 
    not SherlockEventCorrelation(eventSourceIp == e1.eventSourceIp, eventDestinationIp == e1.eventDestinationIp, eventDestinationUsername == e1.eventDestinationUsername)  
  then
  	  System.out.println("[EVENT] Failed Login Attempt Detected");
	  SherlockEventCorrelation plec = new SherlockEventCorrelation();
	  plec.setEventSourceIp(e1.eventSourceIp);
	  plec.setEventDestinationIp(e1.eventDestinationIp);
	  plec.setEventSourcePort(e1.eventSourcePort);
	  plec.setEventDestinationPort(e1.eventDestinationPort);
	  plec.setEventDestinationUsername(e1.eventDestinationUsername);
	  plec.setEventCorrelation(0);
	  insert(plec);
end


rule "Repeated Login Attempt Correlation"
dialect "mvel"
no-loop
  when
    e1: SherlockEvent(eventType == "failed login attempt") over window:time(30s) 
    ce: SherlockEventCorrelation(eventSourceIp == e1.eventSourceIp, eventDestinationIp == e1.eventDestinationIp, eventDestinationUsername == e1.eventDestinationUsername, $eventCorr : eventCorrelation >= 0)
  then
    System.out.println("[EVENT] Failed Login Attempt Violation " + "*********************" + $eventCorr);
  	$eventCorr++;
    ce.eventCorrelation=$eventCorr;
    if(ce.eventCorrelation >= 3) {
    	System.out.println("");
		System.out.println("+++++++++++++++ USE CASE 02 +++++++++++++++");
		System.out.println("SOURCE INET: " + ce.eventSourceIp);
		System.out.println("SOURCE PORT: " + ce.eventSourcePort);
		System.out.println("DESTIN INET: " + ce.eventDestinationIp);
		System.out.println("EVENT  ACTN: " + "failed login attempt");
		System.out.println("EVENT USERN: " + ce.eventDestinationUsername);
		System.out.println("TIMESTAMP  : " + new java.util.Date(ce.eventDestinationTimestamp));
		System.out.println("OCCURENCES : " + $eventCorr);
		System.out.println("+++++++++++++++++++++++++++++++++++++++++++");
		System.out.println("");
    }  	
    update( ce );
    threatMap.put(new java.util.Date(), ce);
end





